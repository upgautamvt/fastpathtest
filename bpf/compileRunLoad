## setup bpf development environment by installing all required libraries
sudo apt install linux-headers-$(uname -r)
sudo apt install libbpfcc-dev
sudo apt install libbpf-dev
sudo apt install llvm
sudo apt install clang
sudo apt install gcc-multilib
sudo apt install build-essential
sudo apt install linux-tools-$(uname -r)
sudo apt install linux-tools-common \
                 linux-tools-generic \
                 linux-tools-$(uname -r)
sudo apt install linux-headers-$(uname -r) \
                 libbpfcc-dev \
                 libbpf-dev \
                 llvm \
                 clang \
                 gcc-multilib \
                 build-essential \
                 linux-tools-$(uname -r) \
                 linux-tools-common \
                 linux-tools-generic


After installing all above correctly, the included headers in the bpf program get resolved.
Also, we need to include LICENSE, otherwise BPF verifier won't load the program


clang -O2 -target bpf -c HelloWorldBpf.c -o HelloWorldBpf.o -I/usr/include/linux -I/lib/modules/$(uname -r)/build/include -I/lib/modules/$(uname -r)/build/include/uapi

##prequisites

bpftool btf dump file /sys/kernel/btf/vmlinux format c > vmlinux.h


sudo mount -t debugfs none /sys/kernel/debug # usually already enabled by system
sudo -i and then from root shell
cd /sys/kernel/debug/tracing/events/syscalls
echo 1 | sudo tee sys_enter_execve/enable # enable sys_enter_execve tracepoint
cat /sys/kernel/debug/tracing/events/syscalls/sys_enter_execve/enable # verify tracepoint is enabled

## load and attach
sudo bpftool prog load HelloWorldBpf.o /sys/fs/bpf/HelloWorldBpf type tracepoint autoattach

upgautam@upgautam-desktop:~/CLionProjects/fastpathtest/bpf$ sudo ls /sys/fs/bpf/
HelloWorldBpf  snap
upgautam@upgautam-desktop:~/CLionProjects/fastpathtest/bpf$ sudo bpftool prog show pinned /sys/fs/bpf/HelloWorldBpf
91: tracepoint  name bpf_prog  tag bf163b23cd3b174d  gpl
        loaded_at 2024-03-12T20:47:39-0400  uid 0
        xlated 48B  jited 36B  memlock 4096B  map_ids 17

For map, it would be
    upgautam@upgautam-desktop:~/CLionProjects/fastpathtest/bpf$ sudo bpftool map show pinned /sys/fs/bpf/HelloWorldBpf
    Error: incorrect object type: prog


upgautam@upgautam-desktop:~/CLionProjects/fastpathtest/bpf$ sudo bpftool link list
1: tracing  prog 2
        prog_type tracing  attach_type modify_return
        target_obj_id 1  target_btf_id 113267
3: perf_event  prog 106
upgautam@upgautam-desktop:~/CLionProjects/fastpathtest/bpf$ sudo bpftool link show pinned /sys/fs/bpf/HelloWorldBpf
3: perf_event  prog 106


## see the output of bpf program
sudo cat /sys/kernel/debug/tracing/trace_pipe # then run any program in another terminal, you should see the output


upgautam@upgautam-desktop:~/CLionProjects/fastpathtest/bpf$ sudo cat /sys/kernel/debug/tracing/trace_pipe
cat: /sys/kernel/debug/tracing/trace_pipe: Device or resource busy
we can kill the trace_pipe running process by closing the terminal
or restart tracing by "echo 0 | sudo tee /sys/kernel/debug/tracing/tracing_on" and then enable again by "echo 1 | sudo tee /sys/kernel/debug/tracing/tracing_on"


## compile and load and attach
clang -O2 -target bpf -c ThousandLoopBpf.c -o ThousandLoopBpf.o -I/usr/include/linux -I/lib/modules/$(uname -r)/build/include -I/lib/modules/$(uname -r)/build/include/uapi
sudo bpftool prog load ThousandLoopBpf.o /sys/fs/bpf/ThousandLoopBpf type tracepoint autoattach


clang -O2 -target bpf -c HelloWorldBpf.c -o HelloWorldBpf.o -I/usr/include/linux -I/lib/modules/$(uname -r)/build/include -I/lib/modules/$(uname -r)/build/include/uapi
sudo bpftool prog load HelloWorldBpf.o /sys/fs/bpf/HelloWorldBpf type tracepoint autoattach
