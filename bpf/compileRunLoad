setup bpf development environment by installing all required libraries

clang -O2 -target bpf -c HelloWorldBpf.c -o HelloWorldBpf.o -I/usr/include/linux -I/lib/modules/$(uname -r)/build/include -I/lib/modules/$(uname -r)/build/include/uapi

sudo bpftool prog load HelloWorldBpf.o /sys/fs/bpf/HelloWorldBpf type tracepoint


upgautam@upgautam-desktop:~/CLionProjects/fastpathtest/bpf$ sudo ls /sys/fs/bpf/
HelloWorldBpf  snap
upgautam@upgautam-desktop:~/CLionProjects/fastpathtest/bpf$ sudo bpftool prog show pinned /sys/fs/bpf/HelloWorldBpf
91: tracepoint  name bpf_prog  tag bf163b23cd3b174d  gpl
        loaded_at 2024-03-12T20:47:39-0400  uid 0
        xlated 48B  jited 36B  memlock 4096B  map_ids 17

For map, it would be
    upgautam@upgautam-desktop:~/CLionProjects/fastpathtest/bpf$ sudo bpftool map show pinned /sys/fs/bpf/HelloWorldBpf
    Error: incorrect object type: prog


upgautam@upgautam-desktop:~/CLionProjects/fastpathtest/bpf$ sudo bpftool link list
1: tracing  prog 2
        prog_type tracing  attach_type modify_return
        target_obj_id 1  target_btf_id 113267
3: perf_event  prog 106

upgautam@upgautam-desktop:~/CLionProjects/fastpathtest/bpf$ sudo bpftool link show pinned /sys/fs/bpf/HelloWorldBpf
3: perf_event  prog 106

sudo bpftool prog load HelloWorldBpf.o /sys/fs/bpf/HelloWorldBpf type tracepoint autoattach


sudo mount -t debugfs none /sys/kernel/debug # usually already enabled by system
sudo -i and then from root shell
cd /sys/kernel/debug/tracing/events/syscalls
echo 1 | sudo tee sys_enter_execve/enable # enable sys_enter_execve tracepoint
cat /sys/kernel/debug/tracing/events/syscalls/sys_enter_execve/enable # verify tracepoint is enabled
sudo cat /sys/kernel/debug/tracing/trace_pipe # then run any program in another terminal, you should see the output










upgautam@upgautam-desktop:~/CLionProjects/fastpathtest/bpf$ sudo cat /sys/kernel/debug/tracing/trace_pipe
cat: /sys/kernel/debug/tracing/trace_pipe: Device or resource busy

